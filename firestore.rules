rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      // Allow users to read/write their own user document
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // User calculations - strict isolation
      match /calculations/{calculationId} {
        // Only authenticated users can access their own calculations
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // Additional validation for write operations
        allow create: if request.auth != null 
          && request.auth.uid == userId
          && request.resource.data.userId == userId
          && resource == null; // Ensure document doesn't already exist
          
        allow update: if request.auth != null 
          && request.auth.uid == userId
          && request.resource.data.userId == userId
          && resource.data.userId == userId; // Ensure userId cannot be changed
          
        allow delete: if request.auth != null 
          && request.auth.uid == userId
          && resource.data.userId == userId;
      }
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// Additional security considerations:
// 1. The userId in the document path must match the authenticated user's UID
// 2. The userId field in the document data must match the authenticated user's UID
// 3. Users cannot change the userId field in existing documents
// 4. Only authenticated users can perform any operations
// 5. All other paths are explicitly denied
//
// This ensures complete isolation between users and prevents:
// - Unauthorized access to other users' calculations
// - Users from spoofing other users' data
// - Unauthenticated access to any data
// - Modification of user ownership after creation